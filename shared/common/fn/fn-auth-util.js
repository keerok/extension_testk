!function e(){var s=Okta.Constants.AuthOptions.DEFAULT_MAX_CLOCK_SKEW,t=_okta.isNumber,r=_okta.isUndefined,o=_okta.isNull,n=_okta.isString,i=_okta.isArray,a=_okta.keys,u=_okta.map,d=_okta.omit,c=_okta.each,p=Okta.fn.other.string,h=p.genRandomString,l=p.base64UrlToString,f=Okta.fn.url.removeTrailingSlash,w=Okta.fn.authUtil={};w.generateState=function(){return h(64)},w.generateNonce=function(){return h(64)},w.getDefaultOAuthParams=function(e){return{clientId:e.clientId,redirectUri:e.redirectUri,responseType:"id_token",responseMode:"okta_post_message",state:w.generateState(64),nonce:w.generateNonce(64),scopes:e.scopes||["openid","email"],ignoreSignature:e.ignoreSignature}},w.getOAuthUrls=function(e){var r=f(e.url),t=r+"/oauth2";return{issuer:e.issuer||r,authorizeUrl:t+"/v1/authorize",userinfoUrl:t+"/v1/userinfo",tokenUrl:t+"/v1/token",revokeUrl:t+"/v1/revoke",logoutUrl:t+"/v1/logout"}},w.removeNils=function(e){return d(e,function(e){return r(e)||o(e)})},w.toQueryParams=function(r){r=r||{},r=w.removeNils(r);var e=u(a(r),function(e){return e+"="+encodeURIComponent(r[e])});return e.length?e.join("&"):""},w.decodeToken=function(e){var r,t=e.split(".");try{r={header:JSON.parse(l(t[0])),payload:JSON.parse(l(t[1])),signature:t[2]}}catch(e){throw new Error("Malformed token")}return r},w.convertOAuthParamsToQueryParams=function(e){if(!e.clientId)throw new Error("A clientId must be specified in the Auth constructor to get a token");if(n(e.responseType)&&-1!==e.responseType.indexOf(" "))throw new Error("Multiple OAuth responseTypes must be defined as an array");var r=w.removeNils({client_id:e.clientId,code_challenge:e.codeChallenge,code_challenge_method:e.codeChallengeMethod,display:e.display,idp:e.idp,idp_scope:e.idpScope,login_hint:e.loginHint,max_age:e.maxAge,nonce:e.nonce,prompt:e.prompt,redirect_uri:e.redirectUri,response_mode:e.responseMode,response_type:e.responseType,sessionToken:e.sessionToken,state:e.state});if(c(["idp_scope","response_type"],function(e){i(r[e])&&(r[e]=r[e].join(" "))}),-1!==e.responseType.indexOf("id_token")&&-1===e.scopes.indexOf("openid"))throw new Error("openid scope must be specified in the scopes argument when requesting an id_token");return r.scope=e.scopes.join(" "),r},w.validateResponse=function(e,r){if(e.error||e.error_description){var t=new Error(e.error+": "+e.error_description);throw t.code=e.error,t}if(e.state!==r.state)throw new Error("OAuth flow response state doesn't match request state")},w.validateOptions=function(e){if(!e.clientId)throw new Error("A clientId must be specified in the Auth constructor to get a token");if(!e.redirectUri)throw new Error("The redirectUri passed to /authorize must also be passed to /token");if(!e.authorizationCode)throw new Error("An authorization code (returned from /authorize) must be passed to /token");if(!e.codeVerifier)throw new Error('The "codeVerifier" (generated and saved by your app) must be passed to /token')},w.validateClaims=function(e,r){var t=r.clientId,o=r.issuer,n=r.nonce;if(!e||!o||!t)throw new Error("The jwt, iss, and aud arguments are all required");if(n&&e.nonce!==n)throw new Error("OAuth flow response nonce doesn't match request nonce");var i=Math.floor(Date.now()/1e3);if(e.iss!==o)throw new Error("The issuer ["+e.iss+"] does not match ["+o+"]");if(e.aud!==t)throw new Error("The audience ["+e.aud+"] does not match ["+t+"]");if(e.iat>e.exp)throw new Error("The JWT expired before it was issued");if(i-s>e.exp)throw new Error("The JWT expired and is no longer valid");if(e.iat>i+s)throw new Error("The JWT was issued in the future")},w.isTokenStorageValid=function(e){if(!e||!e.access_token)return!1;var r=e.access_token;return!!t(r.expiresAt)&&r.expiresAt>Math.floor(Date.now()/1e3)}}();